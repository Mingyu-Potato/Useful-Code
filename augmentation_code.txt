import cv2
import numpy as np
import torch
import torchvision
from torch.utils.data import Dataset
from torchvision import transforms
from PIL import Image
from matplotlib import pyplot as plt

from google.colab import drive
drive.mount('/content/drive')

class TorchvisionDataset(Dataset):
    def __init__(self, file_paths, labels, transform=None):
        self.file_paths = file_paths
        self.labels = labels
        self.transform = transform
        
    def __len__(self):
        return len(self.file_paths)

    def __getitem__(self, idx):
        label = self.labels[idx]
        file_path = self.file_paths[idx]
        
        # Read an image with PIL
        image = Image.open(file_path)
        
        start_t = time.time()
        if self.transform:
            image = self.transform(image)
        total_time = (time.time() - start_t)

        return image, label, total_time

torchvision_transform = transforms.Compose([
    transforms.Resize((683, 1024)), 
    # transforms.ColorJitter(saturation=0.7),
    # transforms.RandomHorizontalFlip(1),
    # transforms.GaussianBlur(3, (0.1,2.0)),
    
    transforms.ToTensor(),
])

torchvision_dataset = TorchvisionDataset(
    file_paths=["/content/drive/MyDrive/SFR-03/Image/017A8509.JPG"],
    labels=[1],
    transform=torchvision_transform,
)

for i in range(1):
  sample, _, transform_time = torchvision_dataset[0]

# RGB augmentation할 코드

# Red = []
# Green = []
# Blue = []

# for x in sample:
#   for y in x:
#     Red.append(y[0])
#     Green.append(y[1])
#     Blue.append(y[2])

# R_avg = sum(Red) / len(Red)
# G_avg = sum(Green) / len(Green)
# B_avg = sum(Blue) / len(Blue)

plt.figure(figsize=(10, 10))
plt.imshow(transforms.ToPILImage()(sample))
plt.show()